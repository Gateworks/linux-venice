// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright 2022 Gateworks Corporation
 */

#include <dt-bindings/gpio/gpio.h>

#include "imx8mm-pinfunc.h"

/dts-v1/;
/plugin/;

&{/} {
	compatible = "gw,imx8mm-gw72xx-0x", "fsl,imx8mm";

	panel {
		compatible = "powertip,ph800480t013-idf02";
		power-supply = <&attiny>;
		backlight = <&attiny>;

		port {
			panel_in: endpoint {
				remote-endpoint = <&bridge_out>;
			};
		};
	};
};

&i2c3 {
	#address-cells = <1>;
	#size-cells = <0>;

	touchscreen@38 {
		compatible = "dfr,dfr0550";
		reg = <0x38>;
		poll-interval = <17>; /* 17:60fps */
		invert;
		screen-x = <800>;
		screen-y = <480>;
	};

	attiny: regulator@45 {
		compatible = "raspberrypi,7inch-touchscreen-panel-regulator";
		reg = <0x45>;
	};
};

&lcdif {
	status = "okay";
};

&mipi_dsi {
	/*
	 * TODO:
	 *  samsung,pll-clock-frequency is IMX8MM_CLK_DSI_PHY_REF and
	 *  samsung,burst-clock-frequency is the DSI link clock
	 *  which is panel/bridge specific.
	 *
	 *  This should not be described in dt but instead the panel/bridge
	 *  drivers should negotiate the best clock settings with the DSIM
	 *  bridge driver implemented in the DRM subsystem.
	 */
	samsung,burst-clock-frequency = <891000000>;
	samsung,esc-clock-frequency = <54000000>;
	samsung,pll-clock-frequency = <27000000>;
	status = "okay";

	bridge@0 {
		compatible = "toshiba,tc358762";
		reg = <0>;
		vddc-supply = <&attiny>;
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;
				bridge_in: endpoint {
					remote-endpoint = <&dsi_out>;
				};
			};

			port@1 {
				reg = <1>;
				bridge_out: endpoint {
					remote-endpoint = <&panel_in>;
				};
			};
		};
	};

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@1 {
			reg = <1>;
			dsi_out: endpoint {
				remote-endpoint = <&bridge_in>;
			};
		};
	};
};
